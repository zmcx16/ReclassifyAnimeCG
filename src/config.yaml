config:
  common:
    use_model_name: "densenet169"
    use_gpu_num: 1
    train_data_path: "I:/work/WORK/ReclassifyAnimeCG/ReclassifyAnimeCG/data-sample/train"
    train_model_path: "I:/work/WORK/ReclassifyAnimeCG/ReclassifyAnimeCG/data-sample/train_weight"
    label_path: "I:/work/WORK/ReclassifyAnimeCG/ReclassifyAnimeCG/data-sample"
    output_data_path: "I:/work/WORK/ReclassifyAnimeCG/ReclassifyAnimeCG/data-sample/output"
    predict_data_path: "I:/work/WORK/ReclassifyAnimeCG/ReclassifyAnimeCG/data-sample/predict" # use when predict_use_test_txt = false
  preprocess:
    train_ratio: 0.7
    save_training_data_info_in_txt: true
    delete_duplicate_images_on_training_data: false
  train:
    start_save_best_model: 0.7 # try to save best model when current epoch >= start_save_best_model * max_epoch
  predict:
    use_test_txt: true
    ignore_predict_file_in_training_data_info: true # only work when use_test_txt=false & train_info.json exist (save_training_data_info_in_txt=true)
    copy_predict_result_to_output_path: true
    copy_predict_result_use_symbolic_link: true
  models_parameter:
    alexnet:
      use_default_pretrained_model: true
      use_final_model: false
      optimizer_algo: 'SGD'
      loss_algo: 'CrossEntropyLoss'
      batch_size: 32
      image_input_size: 300
      max_epoch: 25
      resume_epoch: 0
      weight_decay: 5.e-4
      momentum: 0.9
      lr: 1.e-3
      freeze_first_n_children: 0
      freeze_first_n_parameters: 0
    densenet169: # [densenet121, densenet169, densenet201, densenet161]
      use_default_pretrained_model: true
      use_final_model: false
      optimizer_algo: 'SGD'
      loss_algo: 'CrossEntropyLoss'
      batch_size: 4
      image_input_size: 300
      max_epoch: 25
      resume_epoch: 0
      weight_decay: 5.e-4
      momentum: 0.9
      lr: 1.e-3
      freeze_first_n_children: 0
      freeze_first_n_parameters: 0
    efficientnet-b3: # [efficientnet-b0, efficientnet-b1, efficientnet-b2, efficientnet-b3, efficientnet-b4, efficientnet-b5, efficientnet-b6, efficientnet-b7]
      use_default_pretrained_model: true
      use_final_model: false
      optimizer_algo: 'SGD'
      loss_algo: 'CrossEntropyLoss'
      batch_size: 4
      image_input_size: 300
      max_epoch: 25
      resume_epoch: 0
      weight_decay: 5.e-4
      momentum: 0.9
      lr: 1.e-3
      freeze_first_n_children: 0
      freeze_first_n_parameters: 0
    mnasnet1_0: # [mnasnet0_5, mnasnet0_75, mnasnet1_0, mnasnet1_3]
      use_default_pretrained_model: true
      use_final_model: false
      optimizer_algo: 'SGD'
      loss_algo: 'CrossEntropyLoss'
      batch_size: 16
      image_input_size: 300
      max_epoch: 25
      resume_epoch: 0
      weight_decay: 5.e-4
      momentum: 0.9
      lr: 1.e-3
      freeze_first_n_children: 0
      freeze_first_n_parameters: 0
    mobilenet_v2: # [mobilenet_v2, mobilenet_v3_large, mobilenet_v3_small]
      use_default_pretrained_model: true
      use_final_model: false
      optimizer_algo: 'SGD'
      loss_algo: 'CrossEntropyLoss'
      batch_size: 16
      image_input_size: 300
      max_epoch: 25
      resume_epoch: 0
      weight_decay: 5.e-4
      momentum: 0.9
      lr: 1.e-3
      freeze_first_n_children: 0
      freeze_first_n_parameters: 0
    regnet_x_16gf: # [regnet_y_400mf, regnet_y_800mf, regnet_y_1_6gf, regnet_y_3_2gf, regnet_y_8gf, regnet_y_16gf, regnet_y_32gf, regnet_x_400mf, regnet_x_800mf, regnet_x_1_6gf, regnet_x_3_2gf, regnet_x_8gf, regnet_x_16gf, regnet_x_32gf]
      use_default_pretrained_model: true
      use_final_model: false
      optimizer_algo: 'SGD'
      loss_algo: 'CrossEntropyLoss'
      batch_size: 2
      image_input_size: 300
      max_epoch: 25
      resume_epoch: 0
      weight_decay: 5.e-4
      momentum: 0.9
      lr: 1.e-3
      freeze_first_n_children: 0
      freeze_first_n_parameters: 0
    resnext50_32x4d: # [resnet18, resnet34, resnet50, resnet101, resnet152, resnext50_32x4d, resnext101_32x8d, wide_resnet50_2, wide_resnet101_2]
      use_default_pretrained_model: true
      use_final_model: false
      optimizer_algo: 'SGD'
      loss_algo: 'CrossEntropyLoss'
      batch_size: 4
      image_input_size: 300
      max_epoch: 25
      resume_epoch: 0
      weight_decay: 5.e-4
      momentum: 0.9
      lr: 1.e-3
      freeze_first_n_children: 0
      freeze_first_n_parameters: 0
    shufflenet_v2_x2_0: # [shufflenet_v2_x0_5, shufflenet_v2_x1_0, shufflenet_v2_x1_5, shufflenet_v2_x2_0]
      use_default_pretrained_model: true
      use_final_model: false
      optimizer_algo: 'SGD'
      loss_algo: 'CrossEntropyLoss'
      batch_size: 16
      image_input_size: 300
      max_epoch: 25
      resume_epoch: 0
      weight_decay: 5.e-4
      momentum: 0.9
      lr: 1.e-3
      freeze_first_n_children: 0
      freeze_first_n_parameters: 0
    squeezenet1_1: # [squeezenet1_0, squeezenet1_1]
      use_default_pretrained_model: true
      use_final_model: false
      optimizer_algo: 'SGD'
      loss_algo: 'CrossEntropyLoss'
      batch_size: 16
      image_input_size: 300
      max_epoch: 25
      resume_epoch: 0
      weight_decay: 5.e-4
      momentum: 0.9
      lr: 1.e-3
      freeze_first_n_children: 0
      freeze_first_n_parameters: 0
    vgg11: # [vgg11, vgg13, vgg16, vgg19, vgg11_bn, vgg13_bn, vgg16_bn, vgg19_bn]
      use_default_pretrained_model: true
      use_final_model: false
      optimizer_algo: 'SGD'
      loss_algo: 'CrossEntropyLoss'
      batch_size: 1
      image_input_size: 300
      max_epoch: 25
      resume_epoch: 0
      weight_decay: 5.e-4
      momentum: 0.9
      lr: 1.e-3
      freeze_first_n_children: 0
      freeze_first_n_parameters: 0